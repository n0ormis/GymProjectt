@page "/login"
@using GymProject.SPA.Models.Auth
@using GymProject.SPA.Features.Auth.Services
<h3>Login</h3>

@inject IAuthenticationService _AuthenticationService
@inject NavigationManager NavigationManager


<EditForm Model="SignInModel" OnValidSubmit="ExecuteLogin" class="card card-body bg-light mt-5">
    <DataAnnotationsValidator />
    <div class="form-group row">
        <label for="email" class="col-md-2 col-form-label">Email:</label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" @bind-Value="SignInModel.Email" />
            <ValidationMessage For="@(() => SignInModel.Email)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
            <InputText type="password" id="password" class="form-control" @bind-Value="SignInModel.Password" />
            <ValidationMessage For="@(() => SignInModel.Password)" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Login</button>
        </div>
    </div>
</EditForm>
@code {
    public SignInModel SignInModel = new();
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    
    public async Task ExecuteLogin()
    {
        await _AuthenticationService.SignIn(SignInModel);
    }
}